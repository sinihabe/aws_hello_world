{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Parameters": {
        "DomainName": {
            "Type": "String",
            "Default": "hello.lan."
        }
    },

    "Resources": {

		"DnsZone": {
            "Type": "AWS::Route53::HostedZone",
            "Properties": {
                "Name": {
                    "Ref": "DomainName"
                },
				"VPCs": [{
				  "VPCId": {"Ref":"VPC" },
				  "VPCRegion": "us-west-2"
				}]
            }
        },

        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.1.0.0/16",
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true,
                "InstanceTenancy": "default",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "MY VPC"
                    }
                ]
            }
        },

        "WebSubnetA": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": { "Ref": "VPC" },
                "CidrBlock": "10.1.1.0/28",
                "MapPublicIpOnLaunch": true,
				"AvailabilityZone" : "us-west-2a",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Web Subnet A"
                    }
                ]
            }
        },

        "WebSubnetB": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": { "Ref": "VPC" },
                "CidrBlock": "10.1.1.16/28",
                "MapPublicIpOnLaunch": true,
				"AvailabilityZone" : "us-west-2b",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Web Subnet B"
                    }
                ]
            }
        },

        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Internet Gateway"
                    }
                ]
            }
        },

        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": { "Ref": "VPC" },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },

        "WebSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": { "Ref": "VPC" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Web Subnet Route Table"
                    }
                ]
            }
        },

        "WebAppInternetRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "InternetGateway",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "WebSubnetRouteTable"
                }
            }
        },

        "WebSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": { "Ref": "WebSubnetRouteTable" },
                "SubnetId": { "Ref": "WebSubnetA" }
            }
        },

        "WebSubnetBRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": { "Ref": "WebSubnetRouteTable" },
                "SubnetId": { "Ref": "WebSubnetB" }
            }
        },

        "WebSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow ssh & http to webservers",
                "VpcId": { "Ref": "VPC" },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": -1,
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Webservers Security Group"
                    }
                ]
            }
        },

		"WebServerScaleUpPolicy" : {
			"Type" : "AWS::AutoScaling::ScalingPolicy",
			"Properties" : {
				"AdjustmentType" : "ChangeInCapacity",
				"AutoScalingGroupName" : { "Ref" : "WebScalingGroup" },
				"Cooldown" : "60",
				"ScalingAdjustment" : "1"
			}
		},

		"WebServerScaleDownPolicy" : {
			"Type" : "AWS::AutoScaling::ScalingPolicy",
			"Properties" : {
				"AdjustmentType" : "ChangeInCapacity",
				"AutoScalingGroupName" : { "Ref" : "WebScalingGroup" },
				"Cooldown" : "60",
				"ScalingAdjustment" : "-1"
			}
		},

		"CPUAlarmHigh": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"AlarmDescription": "Scale-up if CPU > 80% for 10 minutes",
				"MetricName": "CPUUtilization",
				"Namespace": "AWS/EC2",
				"Statistic": "Average",
				"Period": "60",
				"EvaluationPeriods": "2",
				"Threshold": "80",
				"AlarmActions": [ { "Ref": "WebServerScaleUpPolicy" } ],
				"Dimensions": [
					{
					"Name": "AutoScalingGroupName",
					"Value": { "Ref": "WebScalingGroup" }
					}
				],
				"ComparisonOperator": "GreaterThanThreshold"
			}
		},

		"CPUAlarmLow": {
			"Type": "AWS::CloudWatch::Alarm",
			"Properties": {
				"AlarmDescription": "Scale-down if CPU < 60% for 10 minutes",
				"MetricName": "CPUUtilization",
				"Namespace": "AWS/EC2",
				"Statistic": "Average",
				"Period": "60",
				"EvaluationPeriods": "2",
				"Threshold": "60",
				"AlarmActions": [ { "Ref": "WebServerScaleDownPolicy" } ],
				"Dimensions": [
					{
					"Name": "AutoScalingGroupName",
					"Value": { "Ref": "WebScalingGroup" }
					}
				],
				"ComparisonOperator": "LessThanThreshold"
			}
		},
		
        "WebLaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "AssociatePublicIpAddress": true,
                "ImageId": "ami-79873901",
                "InstanceMonitoring": false,
                "InstanceType": "t2.micro",
                "KeyName": "mr",
                "PlacementTenancy": "default",
                "SecurityGroups": [ { "Ref": "WebSecurityGroup" } ],
                "UserData": {
                    "Fn::Base64": "#!/bin/bash\napt-get update -qq\n#apt-get upgrade -qq # \napt-get -y install php php-cli libapache2-mod-php php-mcrypt php-mysql apache2 mysql-client stress htop\nsystemctl restart apache2\n"
                }
            }
        },

        "WebScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "LaunchConfigurationName": { "Ref": "WebLaunchConfig" },
				"TargetGroupARNs" : [ { "Ref" : "ALBTargetGroup" } ],
                "MinSize": "2",
                "MaxSize": "3",
                "VPCZoneIdentifier": [ { "Ref": "WebSubnetA" }, { "Ref": "WebSubnetB" } ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WebApp Host",
                        "PropagateAtLaunch": true
                    }
                ]
            }
        },

		"ApplicationLoadBalancer" : {
			"Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
			"Properties" : {
				"SecurityGroups": [ {"Ref": "WebSecurityGroup"} ],
				"Subnets" :[ { "Ref" : "WebSubnetA" }, { "Ref" : "WebSubnetB" } ]
			}
		},

		"ALBListener" : {
			"Type" : "AWS::ElasticLoadBalancingV2::Listener",
			"Properties" : {
				"DefaultActions" : [{
					"Type" : "forward",
					"TargetGroupArn" : { "Ref" : "ALBTargetGroup" }
				}],
				"LoadBalancerArn" : { "Ref" : "ApplicationLoadBalancer" },
				"Port" : "80",
				"Protocol" : "HTTP"
			}
		},

		"ALBTargetGroup" : {
			"Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
			"Properties" : {
				"HealthCheckPath" : "/",
				"HealthCheckIntervalSeconds" : 10,
				"HealthCheckTimeoutSeconds" : 5,
				"HealthyThresholdCount" : 2,
				"Port" : 80,
				"Protocol" : "HTTP",
				"UnhealthyThresholdCount" : 5,
				"VpcId" : { "Ref" : "VPC" },
				"TargetGroupAttributes" : [ 
					{ "Key" : "stickiness.enabled", "Value" : "true" },
					{ "Key" : "stickiness.type", "Value" : "lb_cookie" },
					{ "Key" : "stickiness.lb_cookie.duration_seconds", "Value" : "30" }
				]
			}
		},

		"DBSubnetGroup" : {
			"Type" : "AWS::RDS::DBSubnetGroup",
			"Properties" : {
				"DBSubnetGroupDescription" : "MySQL Subnet",
				"SubnetIds" : [ { "Ref" : "WebSubnetA" }, { "Ref" : "WebSubnetB" } ]
			}
		}, 

		"DnsRecordELB" : {
			"Type" : "AWS::Route53::RecordSet",
			"DependsOn": "ApplicationLoadBalancer",
			"Properties": {
				"HostedZoneId" :  { "Ref": "DnsZone" },
				"Name": "www.hello.lan.",
				"Type": "CNAME",
				"TTL" : "900",
				"ResourceRecords" : [ { "Fn::GetAtt" : [ "ApplicationLoadBalancer", "DNSName" ] } ],
				"Comment": "DNS for RDS"
			}
        },

		"DnsRecordDB": {
            "Type": "AWS::Route53::RecordSet",
			"DependsOn": "DatabaseInstance",
            "Properties": {
				"HostedZoneId" :  { "Ref": "DnsZone" },
				"Name" : "mysql.hello.lan.",
				"Type" : "CNAME",
				"TTL" : "900",

				"ResourceRecords": [ {"Fn::GetAtt": ["DatabaseInstance", "Endpoint.Address"]} ],
				"Comment": "DNS for RDS"
            }
		 },

		"DBEC2SecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties" : {
                "VpcId": { "Ref": "VPC" },
				"GroupDescription": "Web Subnet access to MySQL",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3306",
                        "ToPort": "3306",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
			}
		},

		"DatabaseInstance" : {
			"Type": "AWS::RDS::DBInstance",
			"Properties": {
				"VPCSecurityGroups" : [ { "Fn::GetAtt": [ "DBEC2SecurityGroup", "GroupId" ] } ],
				"DBName" : "helloworld",
				"Engine" : "MySQL",
				"DBSubnetGroupName" : { "Ref": "DBSubnetGroup" } ,
				"MasterUsername" : "hellouser",
				"MasterUserPassword" : "d3317a710fe5029ad06a8c20539f",
				"AllocatedStorage" : "5",
				"DBInstanceClass": "db.t2.micro",
				"Tags": [ {
						"Key": "Name",
						"Value": "MySQL Server"
					} ]           
			}
		}



	}
}
